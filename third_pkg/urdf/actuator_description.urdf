<?xml version="1.0"?>
<robot name="actuator">

    <!--Colors-->
    <material name="white_gray">
        <color rgba="0.9 0.9 0.9 1.0"/>
    </material>
    <material name="black">
        <color rgba="0.0 0.0 0.0 1.0"/>
    </material>

    <!-- If we need a base_link robot fixed to the ground in Gazebo, in the case of robot manipulators, this link named "world" is required instead of the dummy base_link link for rviz-->
    <link name = "world" />

    <joint name="world_motor" type="fixed">
        <parent link="world"/>
        <child link="motor"/>
    </joint>
    
    <link name="motor">
        <visual>
            <geometry>
                <mesh filename="package://third_pkg/meshes/Motor_Soporte.stl" scale="1.0 1.0 1.0"/>
            </geometry>
            <material name="white_gray"/>
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </visual>

        <collision>
            <geometry>
                <mesh filename="package://third_pkg/meshes/Motor_Soporte.stl" scale="1.0 1.0 1.0"/>
            </geometry>
            <!--TODO:origin-->
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </collision>

        <inertial>
            <!--origin obtenido de blender-->
            <origin xyz="-0.003295 0.000022 0.013549" rpy="0.0 0.0 0.0"/>
            <!--mass and inertia obtenido de inventor 0.03225943-->
            <mass value="0.03225943"/>
            <inertia ixx="0.00001302" ixy="0.0" ixz="0.00000002" iyy="0.00001276" iyz="0.00000019" izz="0.00000278"/>
        </inertial>
    </link>

    <joint name="motor_end_effector" type="revolute">
        <!--TODO: cambiar origin (debe ser el del piquito del motor), axis and limit-->
        <origin xyz="0.03225 0.0 0.0140" rpy="0.0 0.0 0.0"/>
        <parent link="motor"/>
        <child link="end_effector"/>
        <axis xyz="1.0 0.0 0.0"/>
        <!--Angulo de giro del joint rads-->
        <limit lower="-3.14" upper="3.14" effort="2.1" velocity="0.5"/>
    </joint>

    <!--TRANSMISSION-->
    <transmission name = "trans_motor_end_effector">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="motor_end_effector">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="motor_end_effector">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>

    <link name="end_effector">
        <visual>
            <geometry>
                <mesh filename="package://third_pkg/meshes/End_Effector.stl" scale="1.0 1.0 1.0"/>
            </geometry>
            <material name="black"/>
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </visual>

        <collision>
            <geometry>
                <mesh filename="package://third_pkg/meshes/End_Effector.stl" scale="1.0 1.0 1.0"/>
            </geometry>
            <!--TODO:origin-->
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </collision>

        <inertial>
            <!--origin obtenido de blender-->
            <!--antes tenÃ­a (xyz) y = 0.38215 -->
            <!--origin xyz="0.0 0.0038215 0.0" rpy="0.0 0.0 0.0"-->
            <origin xyz="0.0 0.0 0.0038215" rpy="0.0 0.0 0.0"/>
            <!--mass and inertia obtenido de inventor 0.00071418-->
            <mass value="0.4"/>
            <!--ixx="0.00000001" ixy="0.00000000" ixz="0.00000000" iyy="0.00000001" iyz="0.00000000" izz="0.00000001"-->
            <inertia ixx="0.00000001" ixy="0.00000000" ixz="0.00000000" iyy="0.00000001" iyz="0.00000000" izz="0.00000001"/>
        </inertial>
    </link>
    
    <gazebo>
        <plugin name = "gazebo_ros_control" filename = "libgazebo_ros_control.so">
            <robotNamespace>/arm</robotNamespace>
        </plugin>
    </gazebo>
</robot>
